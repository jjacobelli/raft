# Copyright (c) 2022, NVIDIA CORPORATION.

# Usage:
#   conda build . -c conda-forge -c numba -c rapidsai -c pytorch
{% set version = environ.get('GIT_DESCRIBE_TAG', '0.0.0.dev').lstrip('v') + environ.get('VERSION_SUFFIX', '') %}
{% set minor_version = version.split('.')[0] + '.' + version.split('.')[1] %}
{% set cuda_version = '.'.join(environ.get('CUDA', 'unknown').split('.')[:2]) %}
{% set cuda_major = cuda_version.split('.')[0] %}
{% set py_version = environ.get('CONDA_PY', 36) %}
{% set ucx_py_version = environ.get('UCX_PY_VERSION') %}

package:
  name: pyraft-split

source:
  git_url: ../../..

outputs:
  - name: pyraft
    version: {{ version }}
    script: build_pyraft.sh
    build:
      number: {{ GIT_DESCRIBE_NUMBER }}
      string: cuda{{ cuda_major }}_py{{ py_version }}_{{ GIT_DESCRIBE_HASH }}_{{ GIT_DESCRIBE_NUMBER }}
      script_env: &script_env
        - CC
        - CXX
        - VERSION_SUFFIX
    requirements:
      build:
        - cuda-python {{ cuda_python_version }}
        - cudatoolkit {{ cuda_version }}.*
        - cython {{ cython_version }}
        - libraft-headers {{ version }}
        - nccl {{ nccl_version }}
        - python
        - rmm {{ minor_version }}
        - setuptools
        - ucx-proc=*=gpu
        - ucx-py {{ ucx_py_version }}
      run:
        - python
        - dask-cuda {{ minor_version }}
        - libraft-headers {{ version }}
        - nccl {{ nccl_version }}
        - rmm {{ minor_version }}
        - ucx-py {{ ucx_py_version }}
        - ucx-proc=*=gpu
        - dask {{ dask_version }}
        - distributed {{ distributed_version }}
        - cuda-python {{ cuda_python_version }}
        - joblib {{ joblib_version }}
        - {{ pin_compatible('cudatoolkit', max_pin='x', min_pin='x') }}
    tests:                                 # [linux64]
      requirements:                        # [linux64]
        - cudatoolkit {{ cuda_version }}.* # [linux64]
      imports:                             # [linux64]
        - raft                             # [linux64]
    about:
      home: http://rapids.ai/
      license: Apache-2.0
      summary: pyraft library
  - name: pylibraft
    version: {{ version }}
    script: build_pylibraft.sh
    build:
      number: {{ GIT_DESCRIBE_NUMBER }}
      string: cuda{{ cuda_major }}_py{{ py_version }}_{{ GIT_DESCRIBE_HASH }}_{{ GIT_DESCRIBE_NUMBER }}
      script_env: *script_env
    requirements:
      build:
        - cuda-python {{ cuda_python_version }}
        - cudatoolkit {{ cuda_version }}.*
        - cython {{ cython_version }}
        - libraft-distance {{ version }}
        - libraft-headers {{ version }}
        - python
        - rmm {{ minor_version }}
        - setuptools
      run:
        - cuda-python {{ cuda_python_version }}
        - libraft-distance {{ version }}
        - libraft-headers {{ version }}
        - python
        - {{ pin_compatible('cudatoolkit', max_pin='x', min_pin='x') }}
    tests:                                 # [linux64]
      requirements:                        # [linux64]
        - cudatoolkit {{ cuda_version }}.* # [linux64]
      imports:                             # [linux64]
        - pylibraft                        # [linux64]
    about:
      home: http://rapids.ai/
      license: Apache-2.0
      summary: pylibraft library
